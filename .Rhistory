par(mfrow=c(3, 2))
plot(Bedrooms_V, Price_V, ylim = c(0, 1000000))
plot(Bathrooms_V, Price_V, ylim = c(0, 1000000))
plot(Sqft_Living_V, Price_V, ylim = c(0,1000000))
plot(Sqft_Lot_V, Price_V,ylim = c(0, 1000000))
plot(Waterfront_V, Price_V, ylim = c(0, 1000000))
plot(Condition_V, Price_V,ylim = c(0, 1000000))
### 1. Reading in the data
data_full <- read.csv("data.csv")
head(data_full)
dim(data_full)
options(width = 100)
class(data_full)
### Transformig the variables from data.frame to vectors for al 18 variables
Price_V <- as.vector(unlist(data_full$price))
Bedrooms_V <- as.vector(unlist(data_full$bedrooms))
Bathrooms_V <- as.vector(unlist(data_full$bathrooms))
Sqft_Living_V <- as.vector(unlist(data_full$sqft_living))
Sqft_Lot_V <- as.vector(unlist(data_full$sqft_lot))
Waterfront_V <- as.vector(unlist(data_full$waterfront))
Condition_V <- as.vector(unlist(data_full$condition))
Street_V <- as.vector(unlist(data_full$street))
City_V <- as.vector(unlist(data_full$city))
par(mfrow=c(3, 2))
plot(Bedrooms_V, Price_V, ylim = c(0, 1000000))
plot(Bathrooms_V, Price_V, ylim = c(0, 1000000))
plot(Sqft_Living_V, Price_V, ylim = c(0,1000000))
plot(Sqft_Lot_V, Price_V,ylim = c(0, 1000000))
plot(Waterfront_V, Price_V, ylim = c(0, 1000000))
plot(Condition_V, Price_V,ylim = c(0, 1000000))
### Setting up multiple regression for the variavles
M_Regress <- lm(Price_V ~ Bedrooms_V + Bathrooms_V +Sqft_Living_V + Sqft_Lot_V + Waterfront_V + Condition_V)
summary(M_Regress)
Sig_M_Regress <- lm(Price_V ~ Sqft_Living_V + Sqft_Lot_V)
summary(Sig_M_Regress)
### Eliminating insignificant Factors
full.model <- M_Regress
reduced.mode <- step(full.model, direction = "backward")
summary(reduced.mode)
par(mfrow=c(1, 1))
plot(Sqft_Living_V, Price_V, ylim = c(0,1000000), xlim = c(0, 8300))
### Boston Plot of Correlation between sqft living and prices
Data_Boston <- subset(data_full, city = "Boston")
setwd("C:/Users/awaldert/Desktop/Data_Science")
data_full <- read.csv("data.csv")
head(data_full)
dim(data_full)
options(width = 100)
class(data_full)
### Transformig the variables from data.frame to vectors for al 18 variables
Price_V <- as.vector(unlist(data_full$price))
Bedrooms_V <- as.vector(unlist(data_full$bedrooms))
Bathrooms_V <- as.vector(unlist(data_full$bathrooms))
Sqft_Living_V <- as.vector(unlist(data_full$sqft_living))
Sqft_Lot_V <- as.vector(unlist(data_full$sqft_lot))
Waterfront_V <- as.vector(unlist(data_full$waterfront))
Condition_V <- as.vector(unlist(data_full$condition))
Street_V <- as.vector(unlist(data_full$street))
City_V <- as.vector(unlist(data_full$city))
par(mfrow=c(3, 2))
plot(Bedrooms_V, Price_V, ylim = c(0, 1000000))
plot(Bathrooms_V, Price_V, ylim = c(0, 1000000))
plot(Sqft_Living_V, Price_V, ylim = c(0,1000000))
plot(Sqft_Lot_V, Price_V,ylim = c(0, 1000000))
plot(Waterfront_V, Price_V, ylim = c(0, 1000000))
plot(Condition_V, Price_V,ylim = c(0, 1000000))
x <- matrix(rnorm(10), 2, 5)
print(x)
apply(x, 1, sum)
apply(x, 2, sum)
str(data_full)
?str
?rpois
x <- rpois(100, c(1:100))
xx
x
plot(x)
x <- rpois(100, c(1:10))
plot(x)
x <- rpois(100, c(5))
plot(x)
x <- rpois(100)
x <- rpois(100, )
x <- rpois(100, 5)
plot(x)
x <- rpois(100, 1:1000)
plot(x)
x <- rpois(100, 77)
plot(x)
x <- rpois(1000, 1:2)
plot(x)
z <- rnorm(1000)
y <- rnorm (1000)
plot(y, z)
_plot
?plot
z <- rnorm(1000)
y <- rnorm (1000)
plot(y, z, type = "l")
z <- rnorm(1000)
y <- rnorm (1000)
plot(y, z, type = "h")
z <- rnorm(1000)
plot(z)
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x+e
plot(x, y)
par(mfrow=c(1, 1))
set.seed(20)
x <- rnorm(100)
e <- rnorm(100, 0, 2)
y <- 0.5 + 2*x+e
plot(x, y)
setwd("C:/Users/awaldert/Desktop/Data_Science")
library(rpart)
install.packages("rpart")
# Installing needed pqackages
library(dplyr)
library(rpart)
library(ggplot2)
library(caTools)
# Reading in the file
read.csv("pokemon.csv") # Provided the WD is set ciorrectlz, the file can be read in like this
library(dplyr)
library(rpart)
library(ggplot2)
library(caTools)
# Reading in the file
read.csv("pokemon.csv") -> pokemon_data
head(pokemon_data)
describe(pokemon_data)
str(pokemon_data)
View(diamonds)
library(ggplot2)
install.packages(c("dplR", "ggplot2", "caTools"))
library(dplyr)
library(rpart)
library(ggplot2)
library(caTools)
View(diamonds)
